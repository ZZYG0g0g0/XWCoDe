/**  * Thrown when a problem occurs running code in ensj.  */
/**  *  Class used to model an address.  */

/**  * This class represents the exception generated when it is not possible  * get a connection to the database  */
/**  * Thread inside of the ConnectionPoolDataSource class that establishes each  * connectionPoolCloseTimeout milliseconds the release of connections  * pool.  */



/**  * This class is the default exception generated by the system.  */


/**  * This class represents the exception generated when a user  * attempts to delete the only Manager user in the database.  */
/**  * This class represents the exception generated when you  * attempts to insert an entity already present in the database.  */
/**  * This class represents the exception generated when an entity  * is not found in the database.  */
/**  * Class used to contain the environment variables of GESA  */

/**  * This class represents the exception generated when a user  * enter an incorrect password during authentication  */







/**  * This class represents the exception generated when attempting  * to enter an entity without specifying a mandatory field  */

/**  * This exception is thrown as a warning from a part of the code which has not  * been implemented yet, but will be in future.  */
/**  * This class represents the exception generated when a user  * tries to perform an operation for which you do not have permission.  */

/**  * Class used to model a report card.  *  * @author Luigi Colangelo  * @version 1.0  *  *          2009 � Copyright by SMOS  */
/**  *  Class used to model a user's role.  *  * @author Bavota Gabriele, Carnival Filomena.  */
/**  * Servlet used to assign Teachings to a teacher  *  *  @author Giulio D'Amora  *  @version 1.0  *  *           2009 � Copyright by SMOS  */

/**  * Servlet used to assign Teachings to a teacher  *  * @author Giulio D'Amora  * @version 1.0  *  *          2009 � Copyright by SMOS  */
/**  * Change server Password of the logged-in user.  *  * @author Napolitano Vincenzo.  */
/**  * Servlet modifying the student record with the id of the father.  *  * @author Napolitano Vincenzo.  */
/**  * Servlet used to assign one or more roles to a user.  *  * @author Napolitano Vincenzo.  */


/**  * Servlet used to delete an address from the database  *  * @author Vecchione Giuseppe  */




/**  * Servlet used to delete a teaching.  *  * @author Giulio D'Amora.  * @version 1.0  *  *          2009 � Copyright by SMOS  */
/**  * Servlet used to delete a user.  *  * @author Napolitano Vincenzo.  */
/**  * Servlet used to initialize system parameters.  *  * @author Bavota Gabriele, Carnevale Filomena.  */
/**  * Servlet used to enter an address in the database  *  * @author Vecchione Giuseppe  */



/**  * Servlet used to insert a student report card.  *  * @author Giulio D'Amora.  * @version 1.0  *  *          2009 ?Copyright by SMOS  */
/**  * Servlet used to insert a course in the DataBase.  *  * @author Giulio D'Amora.  * @version 1.0  *  *          2009 ?Copyright by SMOS  */
/**  * Servlet used to insert a user into the DataBase.  *  * @author napolitano Vincenzo.  */
/**  * Servlet used to view all academic years present in the  * db.  *  * @author Giulio D'Amora  * @version 1.0  *  *          2009 ?Copyright by SMOS  */
/**  * Servlet used to upload a student report card.  *  * @author Giulio D'Amora.  * @version 1.0  *  *          2009 ?Copyright by SMOS  */
/**  * Servlet used to load the list of courses associated with the student's class.  *  * @author Giulio D'Amora.  * @version 1.0  *  *          2009 ?Copyright by SMOS  */
/**  * Servlet used to view all academic years present in the  * db.  *  * @author Giulio D'Amora  * @version 1.0  *  *          2009 ?Copyright by SMOS  */
/**  * Servlet used to login the user.  *  * @author Napolitano Vincenzo.  */
/**  * Servlet used to log out the user.  *  * @author napolitano Vincenzo.  */


/**  * Servlet used to remove Teachings to a teacher  *  * @author Giulio D'Amora  * @version 1.0  *  *          2009 ?Copyright by SMOS  */
/**  * Servlet used to view a report of the teachings of a teacher  *  * @author Giulio D'Amora  * @version 1.0  *  *          2009 ?Copyright by SMOS  */
/**  * Servlet used to change an address.  *  * @author Vecchione Giuseppe.  */
/**  * Servlet used to view all addresses.  *  * @author Vecchione Giuseppe  */

/**  * Servlet to show the details of a class  *  * @author Vecchione Giuseppe  */







/**  * Servlet used to view all teachings.  *  * @author Giulio D'Amora.  * @version 1.0  *  *          2009 ?Copyright by SMOS  */

/**  * Servlet used to view all academic years present in the  * db.  *  * @author Giulio D'Amora  * @version 1.0  *  *          2009 ?Copyright by SMOS  */
/**  * Servlet used to modify a teaching.  *  * @author Giulio D'Amora.  * @version 1.0  *  *          2009 ?Copyright by SMOS  */
/**  * Servlet used to view all teachings.  *  * @author Giulio D'Amora.  * @version 1.0  *  *          2009 ?Copyright by SMOS  */

/**  * Servlet used to retrieve user details.  *  * @author Napolitano Vincenzo.  */
/**  * Servlet used to view all users.  *  * @author Napolitano Vincenzo.  */
/**  * Servlet used to display the management form  * of user roles.  *  * @author Napolitano Vincenzo.  */




/**  * Servlet used to update a student's report card.  *  * @author Giulio D'Amora.  * @version 1.0  *  *          2009 ?Copyright by SMOS  */
/**  * Servlet used to modify a teaching.  *  * @author Giulio D'Amora.  * @version 1.0  *  *          2009 ?Copyright by SMOS  */
/**  * Servlet used to modify a user.  *  * @author Napolitano Vincenzo.  */


/**  *  Class used to model a user.  */
/**  * Class used to model core information  * of a user.  */


/**  * Class used to model a grade.  *  * @author Luigi Colangelo  * @version 1.0  *  *          2009 ?Copyright by SMOS  */